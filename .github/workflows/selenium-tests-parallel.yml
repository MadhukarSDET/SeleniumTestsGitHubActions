name: Run Selenium UI Tests on Chrome, Edge, and Firefox

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  selenium-tests:
    runs-on: ubuntu-latest

    # ðŸ’¡ Run tests in parallel across browsers
    strategy:
      matrix:
        browser: [chrome, edge, firefox]

    steps:
      # Step 1: Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Set up Java
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

      # Step 3: Install Browsers based on Matrix
      - name: Install Browsers
        run: |
          sudo apt-get update -y
          sudo apt-get install -y wget gnupg unzip

          if [ "${{ matrix.browser }}" == "chrome" ]; then
            echo "Installing Google Chrome..."
            wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
            sudo dpkg -i google-chrome-stable_current_amd64.deb || sudo apt-get install -f -y
            google-chrome --version
          fi

          if [ "${{ matrix.browser }}" == "edge" ]; then
            echo "Installing Microsoft Edge..."
            wget https://packages.microsoft.com/repos/edge/pool/main/m/microsoft-edge-stable/microsoft-edge-stable_129.0.2792.52-1_amd64.deb
            sudo dpkg -i microsoft-edge-stable_*.deb || sudo apt-get install -f -y
            microsoft-edge --version
          fi

          if [ "${{ matrix.browser }}" == "firefox" ]; then
            echo "Installing Mozilla Firefox..."
            sudo apt-get install -y firefox
            firefox --version
          fi

      # Step 4: Run Selenium Tests (Browser passed via system property)
      - name: Run Selenium Tests on ${{ matrix.browser }}
        run: mvn clean test -Dbrowser=${{ matrix.browser }} -B

      # Step 5: Upload Test Reports
      - name: Upload Test Reports (${{ matrix.browser }})
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: TestNG-Reports-${{ matrix.browser }}
          path: |
            target/surefire-reports/
            test-output/
